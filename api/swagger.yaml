basePath: /terrarium
definitions:
  model.AlibabaConfig:
    properties:
      bgp_asn:
        default: "65532"
        example: "65532"
        type: string
      region:
        default: ap-northeast-2
        example: ap-northeast-2
        type: string
      vpc_id:
        example: vpc-bp1abcdefg123456789
        type: string
      vswitch_id_1:
        example: vsw-bp1abcdefg123456789
        type: string
      vswitch_id_2:
        example: vsw-bp2abcdefg123456789
        type: string
    type: object
  model.AwsConfig:
    properties:
      bgp_asn:
        default: "64512"
        example: "64512"
        type: string
      region:
        default: ap-northeast-2
        example: ap-northeast-2
        type: string
      subnet_id:
        example: subnet-12345678
        type: string
      vpc_id:
        example: vpc-12345678
        type: string
    type: object
  model.AwsToSiteVpnConfig:
    properties:
      aws:
        $ref: '#/definitions/model.AwsConfig'
      target_csp:
        $ref: '#/definitions/model.TargetCspConfig'
      terrarium_id:
        type: string
    type: object
  model.AzureConfig:
    properties:
      apipa_cidrs:
        example:
        - 169.254.21.0/30
        - 169.254.21.4/30
        - 169.254.22.0/30
        - 169.254.22.4/30
        items:
          type: string
        type: array
      bgp_asn:
        default: "65531"
        example: "65531"
        type: string
      gateway_subnet_cidr:
        example: 10.0.1.0/27
        type: string
      region:
        example: koreacentral
        type: string
      resource_group_name:
        example: my-resource-group
        type: string
      virtual_network_name:
        example: my-virtual-network
        type: string
      vpn_sku:
        default: VpnGw1AZ
        example: VpnGw1AZ
        type: string
    type: object
  model.CreateAwsToSiteVpnRequest:
    properties:
      vpn_config:
        $ref: '#/definitions/model.AwsToSiteVpnConfig'
    type: object
  model.CreateInfracodeOfGcpAwsVpnRequest:
    properties:
      tfVars:
        $ref: '#/definitions/model.TfVarsGcpAwsVpnTunnel'
    type: object
  model.CreateInfracodeOfGcpAzureVpnRequest:
    properties:
      tfVars:
        $ref: '#/definitions/model.TfVarsGcpAzureVpnTunnel'
    type: object
  model.CreateInfracodeOfMessageBrokerRequest:
    properties:
      tfVars:
        $ref: '#/definitions/model.TfVarsMessageBroker'
    type: object
  model.CreateInfracodeOfObjectStorageRequest:
    properties:
      tfVars:
        $ref: '#/definitions/model.TfVarsObjectStorage'
    type: object
  model.CreateInfracodeOfSqlDbRequest:
    properties:
      tfVars:
        $ref: '#/definitions/model.TfVarsSqlDb'
    type: object
  model.CreateSiteToSiteVpnRequest:
    properties:
      vpn_config:
        $ref: '#/definitions/model.SiteToSiteVpnConfig'
    type: object
  model.CreateTestbedRequest:
    properties:
      testbed_config:
        $ref: '#/definitions/model.TestbedConfigDetail'
    type: object
  model.GcpConfig:
    properties:
      bgp_asn:
        default: "65530"
        example: "65530"
        type: string
      region:
        default: asia-northeast3
        example: asia-northeast3
        type: string
      vpc_network_name:
        example: my-vpc-network
        type: string
    type: object
  model.IbmConfig:
    properties:
      region:
        default: au-syd
        example: au-syd
        type: string
      subnet_id:
        example: 0717-abc12345-6789-abcd-ef01-234567890abc
        type: string
      vpc_cidr:
        example: 10.0.0.0/16
        type: string
      vpc_id:
        example: r006-abc12345-6789-abcd-ef01-234567890abc
        type: string
    type: object
  model.Response:
    properties:
      details:
        example: Any details
        type: string
      list:
        items: {}
        type: array
      message:
        example: Any message
        type: string
      object:
        additionalProperties: true
        type: object
      status:
        example: 200
        type: integer
      success:
        example: true
        type: boolean
    type: object
  model.SiteToSiteVpnConfig:
    properties:
      alibaba:
        $ref: '#/definitions/model.AlibabaConfig'
      aws:
        $ref: '#/definitions/model.AwsConfig'
      azure:
        $ref: '#/definitions/model.AzureConfig'
      gcp:
        $ref: '#/definitions/model.GcpConfig'
      ibm:
        $ref: '#/definitions/model.IbmConfig'
      tencent:
        $ref: '#/definitions/model.TencentConfig'
      terrarium_id:
        example: tr01
        type: string
    type: object
  model.TargetCspConfig:
    properties:
      alibaba:
        $ref: '#/definitions/model.AlibabaConfig'
      azure:
        $ref: '#/definitions/model.AzureConfig'
      gcp:
        $ref: '#/definitions/model.GcpConfig'
      ibm:
        $ref: '#/definitions/model.IbmConfig'
      tencent:
        $ref: '#/definitions/model.TencentConfig'
      type:
        type: string
    type: object
  model.TencentConfig:
    properties:
      region:
        default: ap-seoul
        example: ap-seoul
        type: string
      subnet_id:
        example: subnet-abcdefg123456789
        type: string
      vpc_id:
        example: vpc-abcdefg123456789
        type: string
    type: object
  model.TerrariumCreationRequest:
    properties:
      description:
        default: This terrarium enriches ...
        example: This terrarium enriches ...
        type: string
      name:
        default: tr01
        example: tr01
        type: string
    required:
    - name
    type: object
  model.TerrariumInfo:
    properties:
      description:
        default: This terrarium enriches ...
        example: This terrarium enriches ...
        type: string
      enrichments:
        example: vpn/aws-to-site
        type: string
      id:
        default: tr01
        example: tr01
        type: string
      name:
        default: tr01
        example: tr01
        type: string
      providers:
        example:
        - aws
        - azure
        - gcp
        items:
          type: string
        type: array
    required:
    - id
    - name
    type: object
  model.TestbedConfigDetail:
    properties:
      desired_providers:
        example:
        - aws
        - azure
        - gcp
        - alibaba
        - tencent
        - ibm
        items:
          type: string
        type: array
      terrarium_id:
        example: ""
        type: string
    type: object
  model.TfVarsGcpAwsVpnTunnel:
    properties:
      aws-region:
        default: ap-northeast-2
        example: ap-northeast-2
        type: string
      aws-subnet-id:
        example: subnet-xxxxx
        type: string
      aws-vpc-id:
        example: vpc-xxxxx
        type: string
      gcp-region:
        default: asia-northeast3
        example: asia-northeast3
        type: string
      gcp-vpc-network-name:
        default: tr-gcp-vpc
        example: tr-gcp-vpc
        type: string
      terrarium-id:
        example: ""
        type: string
    type: object
  model.TfVarsGcpAzureVpnTunnel:
    properties:
      azure-gateway-subnet-cidr-block:
        default: 192.168.130.0/24
        example: 192.168.130.0/24
        type: string
      azure-region:
        default: koreacentral
        example: koreacentral
        type: string
      azure-resource-group-name:
        default: tr-rg-01
        example: tr-rg-01
        type: string
      azure-virtual-network-name:
        default: tr-azure-vnet
        example: tr-azure-vnet
        type: string
      gcp-region:
        default: asia-northeast3
        example: asia-northeast3
        type: string
      gcp-vpc-network-name:
        default: tr-gcp-vpc
        example: tr-gcp-vpc
        type: string
      terrarium-id:
        example: ""
        type: string
    type: object
  model.TfVarsMessageBroker:
    properties:
      csp_region:
        example: ap-northeast-2
        type: string
      csp_vnet_id:
        example: vpc-12345678
        type: string
      terrarium_id:
        example: ""
        type: string
    type: object
  model.TfVarsObjectStorage:
    properties:
      csp_region:
        example: ap-northeast-2
        type: string
      csp_resource_group:
        example: koreacentral
        type: string
      terrarium_id:
        example: ""
        type: string
    type: object
  model.TfVarsSqlDb:
    properties:
      csp_region:
        example: ap-northeast-2
        type: string
      csp_resource_group:
        example: rg-12345678
        type: string
      csp_subnet1_id:
        example: subnet-1234abcd
        type: string
      csp_subnet2_id:
        example: subnet-abcd1234
        type: string
      csp_vnet_id:
        example: vpc-12345678
        type: string
      db_admin_password:
        example: Password1234!
        type: string
      db_admin_username:
        example: mydbadmin
        type: string
      db_engine_port:
        example: 3306
        type: integer
      db_engine_version:
        example: 8.0.39
        type: string
      db_instance_spec:
        example: db.t3.micro
        type: string
      egress_cidr_block:
        example: 0.0.0.0/0
        type: string
      ingress_cidr_block:
        example: 0.0.0.0/0
        type: string
      terrarium_id:
        example: ""
        type: string
    type: object
host: localhost:8055
info:
  contact:
    name: API Support
    url: https://github.com/cloud-barista/mc-terrarium/issues/new
  description: Multi-Cloud Terrarium (mc-terrarium) aims to provide an environment
    to enrich multi-cloud infrastructure.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  title: Multi-Cloud Terrarium REST API
  version: latest
paths:
  /httpVersion:
    get:
      consumes:
      - application/json
      description: Checks and logs the HTTP version of the incoming request to the
        server console.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
      summary: Check HTTP version of incoming request
      tags:
      - '[System] Utility'
  /readyz:
    get:
      consumes:
      - application/json
      description: Check mc-terrarium server is ready
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Response'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/model.Response'
      summary: Check mc-terrarium server is ready
      tags:
      - '[System] Utility'
  /tofuVersion:
    get:
      consumes:
      - application/json
      description: Check Tofu version
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Response'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/model.Response'
      summary: Check Tofu version
      tags:
      - '[System] Utility'
  /tr:
    get:
      consumes:
      - application/json
      description: Read all terrarium
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/model.TerrariumInfo'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/model.Response'
      summary: Read all terrarium
      tags:
      - '[Terrarium] An environment to enrich the multi-cloud infrastructure'
    post:
      consumes:
      - application/json
      description: Issue/create a terrarium
      parameters:
      - description: Information for a new terrarium
        in: body
        name: RequestBody
        required: true
        schema:
          $ref: '#/definitions/model.TerrariumCreationRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/model.Response'
      summary: Issue/create a terrarium
      tags:
      - '[Terrarium] An environment to enrich the multi-cloud infrastructure'
  /tr/{trId}:
    delete:
      consumes:
      - application/json
      description: Erase the entire terrarium including directories and configuration
        files
      parameters:
      - default: tr01
        description: Terrarium ID
        in: path
        name: trId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/model.Response'
      summary: Erase the entire terrarium including directories and configuration
        files
      tags:
      - '[Terrarium] An environment to enrich the multi-cloud infrastructure'
    get:
      consumes:
      - application/json
      description: Read a terrarium
      parameters:
      - default: tr01
        description: Terrarium ID
        in: path
        name: trId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.TerrariumInfo'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/model.Response'
      summary: Read a terrarium
      tags:
      - '[Terrarium] An environment to enrich the multi-cloud infrastructure'
  /tr/{trId}/message-broker:
    delete:
      consumes:
      - application/json
      description: Destroy Message Broker
      parameters:
      - default: tr01
        description: Terrarium ID
        in: path
        name: trId
        required: true
        type: string
      - description: Custom request ID
        in: header
        name: x-request-id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/model.Response'
      summary: Destroy Message Broker
      tags:
      - '[Message Broker] Operations'
    get:
      consumes:
      - application/json
      description: Get resource info of Message Broker
      parameters:
      - default: tr01
        description: Terrarium ID
        in: path
        name: trId
        required: true
        type: string
      - default: refined
        description: Resource info by detail (refined, raw)
        in: query
        name: detail
        type: string
      - description: custom request ID
        in: header
        name: x-request-id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/model.Response'
      summary: Get resource info of Message Broker
      tags:
      - '[Message Broker] Operations'
    post:
      consumes:
      - application/json
      description: Create Message Broker
      parameters:
      - default: tr01
        description: Terrarium ID
        in: path
        name: trId
        required: true
        type: string
      - description: Custom request ID
        in: header
        name: x-request-id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/model.Response'
      summary: Create Message Broker
      tags:
      - '[Message Broker] Operations'
  /tr/{trId}/message-broker/env:
    delete:
      consumes:
      - application/json
      description: Clear the entire directory and configuration files
      parameters:
      - default: tr01
        description: Terrarium ID
        in: path
        name: trId
        required: true
        type: string
      - default: ""
        description: Action
        enum:
        - force
        in: query
        name: action
        type: string
      - description: Custom request ID
        in: header
        name: x-request-id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/model.Response'
      summary: Clear the entire directory and configuration files
      tags:
      - '[Message Broker] Operations'
    post:
      consumes:
      - application/json
      description: Initialize a multi-cloud terrarium for Message Broker (e.g., AWS
        MQ Broker (ActiveMQ))
      parameters:
      - default: tr01
        description: Terrarium ID
        in: path
        name: trId
        required: true
        type: string
      - default: aws
        description: Provider
        enum:
        - aws
        in: query
        name: provider
        type: string
      - description: Custom request ID
        in: header
        name: x-request-id
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/model.Response'
      summary: Initialize a multi-cloud terrarium for Message Broker (e.g., AWS MQ
        Broker (ActiveMQ))
      tags:
      - '[Message Broker] Operations'
  /tr/{trId}/message-broker/infracode:
    post:
      consumes:
      - application/json
      description: Create the infracode for Message Broker
      parameters:
      - default: tr01
        description: Terrarium ID
        in: path
        name: trId
        required: true
        type: string
      - description: Parameters of infracode for Message Broker
        in: body
        name: ParamsForInfracode
        required: true
        schema:
          $ref: '#/definitions/model.CreateInfracodeOfMessageBrokerRequest'
      - description: Custom request ID
        in: header
        name: x-request-id
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/model.Response'
      summary: Create the infracode for Message Broker
      tags:
      - '[Message Broker] Operations'
  /tr/{trId}/message-broker/plan:
    post:
      consumes:
      - application/json
      description: Check and show changes by the current infracode
      parameters:
      - default: tr01
        description: Terrarium ID
        in: path
        name: trId
        required: true
        type: string
      - description: Custom request ID
        in: header
        name: x-request-id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/model.Response'
      summary: Check and show changes by the current infracode
      tags:
      - '[Message Broker] Operations'
  /tr/{trId}/message-broker/request/{requestId}:
    get:
      consumes:
      - application/json
      description: Check the status of a specific request by its ID
      parameters:
      - default: tr01
        description: Terrarium ID
        in: path
        name: trId
        required: true
        type: string
      - description: Request ID
        in: path
        name: requestId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/model.Response'
      summary: Check the status of a specific request by its ID
      tags:
      - '[Message Broker] Operations'
  /tr/{trId}/object-storage:
    delete:
      consumes:
      - application/json
      description: Destroy Object Storage
      parameters:
      - default: tr01
        description: Terrarium ID
        in: path
        name: trId
        required: true
        type: string
      - description: Custom request ID
        in: header
        name: x-request-id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/model.Response'
      summary: Destroy Object Storage
      tags:
      - '[Object Storage] Operations'
    get:
      consumes:
      - application/json
      description: Get resource info of Object Storage
      parameters:
      - default: tr01
        description: Terrarium ID
        in: path
        name: trId
        required: true
        type: string
      - default: refined
        description: Resource info by detail (refined, raw)
        in: query
        name: detail
        type: string
      - description: custom request ID
        in: header
        name: x-request-id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/model.Response'
      summary: Get resource info of Object Storage
      tags:
      - '[Object Storage] Operations'
    post:
      consumes:
      - application/json
      description: Create Object Storage
      parameters:
      - default: tr01
        description: Terrarium ID
        in: path
        name: trId
        required: true
        type: string
      - description: Custom request ID
        in: header
        name: x-request-id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/model.Response'
      summary: Create Object Storage
      tags:
      - '[Object Storage] Operations'
  /tr/{trId}/object-storage/env:
    delete:
      consumes:
      - application/json
      description: Clear the entire directory and configuration files
      parameters:
      - default: tr01
        description: Terrarium ID
        in: path
        name: trId
        required: true
        type: string
      - default: ""
        description: Action
        enum:
        - force
        in: query
        name: action
        type: string
      - description: Custom request ID
        in: header
        name: x-request-id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/model.Response'
      summary: Clear the entire directory and configuration files
      tags:
      - '[Object Storage] Operations'
    post:
      consumes:
      - application/json
      description: Initialize a multi-cloud terrarium for Object Storage (e.g., AWS
        S3 Bucket, Azure Blob Storage)
      parameters:
      - default: tr01
        description: Terrarium ID
        in: path
        name: trId
        required: true
        type: string
      - default: aws
        description: Provider
        enum:
        - aws
        - azure
        in: query
        name: provider
        type: string
      - description: Custom request ID
        in: header
        name: x-request-id
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/model.Response'
      summary: Initialize a multi-cloud terrarium for Object Storage (e.g., AWS S3
        Bucket, Azure Blob Storage)
      tags:
      - '[Object Storage] Operations'
  /tr/{trId}/object-storage/infracode:
    post:
      consumes:
      - application/json
      description: Create the infracode for Object Storage
      parameters:
      - default: tr01
        description: Terrarium ID
        in: path
        name: trId
        required: true
        type: string
      - description: Parameters of infracode for Object Storage
        in: body
        name: ParamsForInfracode
        required: true
        schema:
          $ref: '#/definitions/model.CreateInfracodeOfObjectStorageRequest'
      - description: Custom request ID
        in: header
        name: x-request-id
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/model.Response'
      summary: Create the infracode for Object Storage
      tags:
      - '[Object Storage] Operations'
  /tr/{trId}/object-storage/plan:
    post:
      consumes:
      - application/json
      description: Check and show changes by the current infracode
      parameters:
      - default: tr01
        description: Terrarium ID
        in: path
        name: trId
        required: true
        type: string
      - description: Custom request ID
        in: header
        name: x-request-id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/model.Response'
      summary: Check and show changes by the current infracode
      tags:
      - '[Object Storage] Operations'
  /tr/{trId}/object-storage/request/{requestId}:
    get:
      consumes:
      - application/json
      description: Check the status of a specific request by its ID
      parameters:
      - default: tr01
        description: Terrarium ID
        in: path
        name: trId
        required: true
        type: string
      - description: Request ID
        in: path
        name: requestId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/model.Response'
      summary: Check the status of a specific request by its ID
      tags:
      - '[Object Storage] Operations'
  /tr/{trId}/sql-db:
    delete:
      consumes:
      - application/json
      description: Destroy SQL database
      parameters:
      - default: tr01
        description: Terrarium ID
        in: path
        name: trId
        required: true
        type: string
      - description: Custom request ID
        in: header
        name: x-request-id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/model.Response'
      summary: Destroy SQL database
      tags:
      - '[SQL Database] Operations'
    get:
      consumes:
      - application/json
      description: Get resource info of SQL database
      parameters:
      - default: tr01
        description: Terrarium ID
        in: path
        name: trId
        required: true
        type: string
      - default: refined
        description: Resource info by detail (refined, raw)
        in: query
        name: detail
        type: string
      - description: custom request ID
        in: header
        name: x-request-id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/model.Response'
      summary: Get resource info of SQL database
      tags:
      - '[SQL Database] Operations'
    post:
      consumes:
      - application/json
      description: Create SQL database
      parameters:
      - default: tr01
        description: Terrarium ID
        in: path
        name: trId
        required: true
        type: string
      - description: Custom request ID
        in: header
        name: x-request-id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/model.Response'
      summary: Create SQL database
      tags:
      - '[SQL Database] Operations'
  /tr/{trId}/sql-db/env:
    delete:
      consumes:
      - application/json
      description: Clear the entire directory and configuration files
      parameters:
      - default: tr01
        description: Terrarium ID
        in: path
        name: trId
        required: true
        type: string
      - default: ""
        description: Action
        enum:
        - force
        in: query
        name: action
        type: string
      - description: Custom request ID
        in: header
        name: x-request-id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/model.Response'
      summary: Clear the entire directory and configuration files
      tags:
      - '[SQL Database] Operations'
    post:
      consumes:
      - application/json
      description: Initialize a multi-cloud terrarium for SQL database
      parameters:
      - default: tr01
        description: Terrarium ID
        in: path
        name: trId
        required: true
        type: string
      - default: aws
        description: Provider
        enum:
        - aws
        - azure
        - gcp
        - ncp
        in: query
        name: provider
        type: string
      - description: Custom request ID
        in: header
        name: x-request-id
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/model.Response'
      summary: Initialize a multi-cloud terrarium for SQL database
      tags:
      - '[SQL Database] Operations'
  /tr/{trId}/sql-db/infracode:
    post:
      consumes:
      - application/json
      description: Create the infracode for SQL database
      parameters:
      - default: tr01
        description: Terrarium ID
        in: path
        name: trId
        required: true
        type: string
      - description: Parameters of infracode for SQL database
        in: body
        name: ParamsForInfracode
        required: true
        schema:
          $ref: '#/definitions/model.CreateInfracodeOfSqlDbRequest'
      - description: Custom request ID
        in: header
        name: x-request-id
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/model.Response'
      summary: Create the infracode for SQL database
      tags:
      - '[SQL Database] Operations'
  /tr/{trId}/sql-db/plan:
    post:
      consumes:
      - application/json
      description: Check and show changes by the current infracode
      parameters:
      - default: tr01
        description: Terrarium ID
        in: path
        name: trId
        required: true
        type: string
      - description: Custom request ID
        in: header
        name: x-request-id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/model.Response'
      summary: Check and show changes by the current infracode
      tags:
      - '[SQL Database] Operations'
  /tr/{trId}/sql-db/request/{requestId}:
    get:
      consumes:
      - application/json
      description: Check the status of a specific request by its ID
      parameters:
      - default: tr01
        description: Terrarium ID
        in: path
        name: trId
        required: true
        type: string
      - description: Request ID
        in: path
        name: requestId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/model.Response'
      summary: Check the status of a specific request by its ID
      tags:
      - '[SQL Database] Operations'
  /tr/{trId}/testbed:
    delete:
      consumes:
      - application/json
      description: Delete the testbed
      parameters:
      - default: testbed01
        description: Terrarium ID
        in: path
        name: trId
        required: true
        type: string
      - description: Custom request ID
        in: header
        name: x-request-id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/model.Response'
      summary: Delete the testbed
      tags:
      - '[Testbed] Resource Operations'
    get:
      consumes:
      - application/json
      description: Get the testbed
      parameters:
      - default: testbed01
        description: Terrarium ID
        in: path
        name: trId
        required: true
        type: string
      - default: refined
        description: Resource info by detail (refined, raw)
        enum:
        - refined
        - raw
        in: query
        name: detail
        type: string
      - description: Custom request ID
        in: header
        name: x-request-id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/model.Response'
      summary: Get the testbed
      tags:
      - '[Testbed] Resource Operations'
    post:
      consumes:
      - application/json
      description: Create the testbed
      parameters:
      - default: testbed01
        description: Terrarium ID
        in: path
        name: trId
        required: true
        type: string
      - description: Parameters requied to create a testbed
        in: body
        name: ReqBody
        required: true
        schema:
          $ref: '#/definitions/model.CreateTestbedRequest'
      - description: Custom request ID
        in: header
        name: x-request-id
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/model.Response'
      summary: Create the testbed
      tags:
      - '[Testbed] Resource Operations'
  /tr/{trId}/testbed/actions/apply:
    post:
      consumes:
      - application/json
      description: Apply the testbed
      parameters:
      - default: testbed01
        description: Terrarium ID
        in: path
        name: trId
        required: true
        type: string
      - description: Custom request ID
        in: header
        name: x-request-id
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/model.Response'
      summary: Apply the testbed
      tags:
      - '[Testbed] OpenTofu Actions (for fine-grained contorl)'
  /tr/{trId}/testbed/actions/destroy:
    delete:
      consumes:
      - application/json
      description: Destroy the testbed
      parameters:
      - default: testbed01
        description: Terrarium ID
        in: path
        name: trId
        required: true
        type: string
      - description: Custom request ID
        in: header
        name: x-request-id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/model.Response'
      summary: Destroy the testbed
      tags:
      - '[Testbed] OpenTofu Actions (for fine-grained contorl)'
  /tr/{trId}/testbed/actions/emptyout:
    delete:
      consumes:
      - application/json
      description: EmptyOut the testbed
      parameters:
      - default: testbed01
        description: Terrarium ID
        in: path
        name: trId
        required: true
        type: string
      - description: Custom request ID
        in: header
        name: x-request-id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/model.Response'
      summary: EmptyOut the testbed
      tags:
      - '[Testbed] OpenTofu Actions (for fine-grained contorl)'
  /tr/{trId}/testbed/actions/init:
    post:
      consumes:
      - application/json
      description: Init testbed
      parameters:
      - default: testbed01
        description: Terrarium ID
        in: path
        name: trId
        required: true
        type: string
      - description: Parameters requied to create a testbed
        in: body
        name: ReqBody
        required: true
        schema:
          $ref: '#/definitions/model.CreateTestbedRequest'
      - description: Custom request ID
        in: header
        name: x-request-id
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/model.Response'
      summary: Init testbed
      tags:
      - '[Testbed] OpenTofu Actions (for fine-grained contorl)'
  /tr/{trId}/testbed/actions/output:
    get:
      consumes:
      - application/json
      description: Output the testbed
      parameters:
      - default: testbed01
        description: Terrarium ID
        in: path
        name: trId
        required: true
        type: string
      - default: refined
        description: Resource info by detail (refined, raw)
        enum:
        - refined
        - raw
        in: query
        name: detail
        type: string
      - description: Custom request ID
        in: header
        name: x-request-id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/model.Response'
      summary: Output the testbed
      tags:
      - '[Testbed] OpenTofu Actions (for fine-grained contorl)'
  /tr/{trId}/testbed/actions/plan:
    post:
      consumes:
      - application/json
      description: Plan the testbed
      parameters:
      - default: testbed01
        description: Terrarium ID
        in: path
        name: trId
        required: true
        type: string
      - description: Custom request ID
        in: header
        name: x-request-id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/model.Response'
      summary: Plan the testbed
      tags:
      - '[Testbed] OpenTofu Actions (for fine-grained contorl)'
  /tr/{trId}/vpn/aws-to-site:
    delete:
      consumes:
      - application/json
      description: Delete AWS to site VPN
      parameters:
      - default: tr01
        description: Terrarium ID
        in: path
        name: trId
        required: true
        type: string
      - description: Custom request ID
        in: header
        name: x-request-id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/model.Response'
      summary: Delete AWS to site VPN
      tags:
      - '[AWS to site VPN] Resource Operations'
    get:
      consumes:
      - application/json
      description: Get AWS to site VPN
      parameters:
      - default: tr01
        description: Terrarium ID
        in: path
        name: trId
        required: true
        type: string
      - default: refined
        description: Resource info by detail (refined, raw)
        enum:
        - refined
        - raw
        in: query
        name: detail
        type: string
      - description: Custom request ID
        in: header
        name: x-request-id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/model.Response'
      summary: Get AWS to site VPN
      tags:
      - '[AWS to site VPN] Resource Operations'
    post:
      consumes:
      - application/json
      description: Create AWS to site VPN
      parameters:
      - default: tr01
        description: Terrarium ID
        in: path
        name: trId
        required: true
        type: string
      - description: Parameters requied to create the AWS to site VPN
        in: body
        name: ReqBody
        required: true
        schema:
          $ref: '#/definitions/model.CreateAwsToSiteVpnRequest'
      - description: Custom request ID
        in: header
        name: x-request-id
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/model.Response'
      summary: Create AWS to site VPN
      tags:
      - '[AWS to site VPN] Resource Operations'
  /tr/{trId}/vpn/aws-to-site/actions/apply:
    post:
      consumes:
      - application/json
      description: Apply AWS to site VPN
      parameters:
      - default: tr01
        description: Terrarium ID
        in: path
        name: trId
        required: true
        type: string
      - description: Custom request ID
        in: header
        name: x-request-id
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/model.Response'
      summary: Apply AWS to site VPN
      tags:
      - '[AWS to site VPN] OpenTofu Actions (for fine-grained contorl)'
  /tr/{trId}/vpn/aws-to-site/actions/destroy:
    delete:
      consumes:
      - application/json
      description: Destroy AWS to site VPN
      parameters:
      - default: tr01
        description: Terrarium ID
        in: path
        name: trId
        required: true
        type: string
      - description: Custom request ID
        in: header
        name: x-request-id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/model.Response'
      summary: Destroy AWS to site VPN
      tags:
      - '[AWS to site VPN] OpenTofu Actions (for fine-grained contorl)'
  /tr/{trId}/vpn/aws-to-site/actions/emptyout:
    delete:
      consumes:
      - application/json
      description: EmptyOut AWS to site VPN
      parameters:
      - default: tr01
        description: Terrarium ID
        in: path
        name: trId
        required: true
        type: string
      - description: Custom request ID
        in: header
        name: x-request-id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/model.Response'
      summary: EmptyOut AWS to site VPN
      tags:
      - '[AWS to site VPN] OpenTofu Actions (for fine-grained contorl)'
  /tr/{trId}/vpn/aws-to-site/actions/init:
    post:
      consumes:
      - application/json
      description: Init AWS to site VPN
      parameters:
      - default: tr01
        description: Terrarium ID
        in: path
        name: trId
        required: true
        type: string
      - description: Parameters requied to create the AWS to site VPN
        in: body
        name: ReqBody
        required: true
        schema:
          $ref: '#/definitions/model.CreateAwsToSiteVpnRequest'
      - description: Custom request ID
        in: header
        name: x-request-id
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/model.Response'
      summary: Init AWS to site VPN
      tags:
      - '[AWS to site VPN] OpenTofu Actions (for fine-grained contorl)'
  /tr/{trId}/vpn/aws-to-site/actions/output:
    get:
      consumes:
      - application/json
      description: Output AWS to site VPN
      parameters:
      - default: tr01
        description: Terrarium ID
        in: path
        name: trId
        required: true
        type: string
      - default: refined
        description: Resource info by detail (refined, raw)
        enum:
        - refined
        - raw
        in: query
        name: detail
        type: string
      - description: Custom request ID
        in: header
        name: x-request-id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/model.Response'
      summary: Output AWS to site VPN
      tags:
      - '[AWS to site VPN] OpenTofu Actions (for fine-grained contorl)'
  /tr/{trId}/vpn/aws-to-site/actions/plan:
    post:
      consumes:
      - application/json
      description: Plan AWS to site VPN
      parameters:
      - default: tr01
        description: Terrarium ID
        in: path
        name: trId
        required: true
        type: string
      - description: Custom request ID
        in: header
        name: x-request-id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/model.Response'
      summary: Plan AWS to site VPN
      tags:
      - '[AWS to site VPN] OpenTofu Actions (for fine-grained contorl)'
  /tr/{trId}/vpn/gcp-aws:
    delete:
      consumes:
      - application/json
      description: Destroy network resources that were used to configure GCP as an
        AWS VPN tunnel
      parameters:
      - default: tr01
        description: Terrarium ID
        in: path
        name: trId
        required: true
        type: string
      - description: Custom request ID
        in: header
        name: x-request-id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/model.Response'
      summary: Destroy network resources that were used to configure GCP as an AWS
        VPN tunnel
      tags:
      - '[VPN] GCP to AWS VPN tunnel configuration'
    get:
      consumes:
      - application/json
      description: Get resource info to configure GCP to AWS VPN tunnels
      parameters:
      - default: tr01
        description: Terrarium ID
        in: path
        name: trId
        required: true
        type: string
      - default: refined
        description: Resource info by detail (refined, raw)
        in: query
        name: detail
        type: string
      - description: custom request ID
        in: header
        name: x-request-id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/model.Response'
      summary: Get resource info to configure GCP to AWS VPN tunnels
      tags:
      - '[VPN] GCP to AWS VPN tunnel configuration'
    post:
      consumes:
      - application/json
      description: Create network resources for VPN tunnel in GCP and AWS
      parameters:
      - default: tr01
        description: Terrarium ID
        in: path
        name: trId
        required: true
        type: string
      - description: Custom request ID
        in: header
        name: x-request-id
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/model.Response'
      summary: Create network resources for VPN tunnel in GCP and AWS
      tags:
      - '[VPN] GCP to AWS VPN tunnel configuration'
  /tr/{trId}/vpn/gcp-aws/env:
    delete:
      consumes:
      - application/json
      description: Clear the entire directory and configuration files
      parameters:
      - default: tr01
        description: Terrarium ID
        in: path
        name: trId
        required: true
        type: string
      - description: Custom request ID
        in: header
        name: x-request-id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/model.Response'
      summary: Clear the entire directory and configuration files
      tags:
      - '[VPN] GCP to AWS VPN tunnel configuration'
    post:
      consumes:
      - application/json
      description: Initialize a multi-cloud terrarium for GCP to AWS VPN tunnel
      parameters:
      - default: tr01
        description: Terrarium ID
        in: path
        name: trId
        required: true
        type: string
      - description: Custom request ID
        in: header
        name: x-request-id
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/model.Response'
      summary: Initialize a multi-cloud terrarium for GCP to AWS VPN tunnel
      tags:
      - '[VPN] GCP to AWS VPN tunnel configuration'
  /tr/{trId}/vpn/gcp-aws/infracode:
    post:
      consumes:
      - application/json
      description: Create the infracode to configure GCP to AWS VPN tunnels
      parameters:
      - default: tr01
        description: Terrarium ID
        in: path
        name: trId
        required: true
        type: string
      - description: Parameters requied to create the infracode to configure GCP to
          AWS VPN tunnels
        in: body
        name: ParamsForInfracode
        required: true
        schema:
          $ref: '#/definitions/model.CreateInfracodeOfGcpAwsVpnRequest'
      - description: Custom request ID
        in: header
        name: x-request-id
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/model.Response'
      summary: Create the infracode to configure GCP to AWS VPN tunnels
      tags:
      - '[VPN] GCP to AWS VPN tunnel configuration'
  /tr/{trId}/vpn/gcp-aws/plan:
    post:
      consumes:
      - application/json
      description: Check and show changes by the current infracode to configure GCP
        to AWS VPN tunnels
      parameters:
      - default: tr01
        description: Terrarium ID
        in: path
        name: trId
        required: true
        type: string
      - description: Custom request ID
        in: header
        name: x-request-id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/model.Response'
      summary: Check and show changes by the current infracode to configure GCP to
        AWS VPN tunnels
      tags:
      - '[VPN] GCP to AWS VPN tunnel configuration'
  /tr/{trId}/vpn/gcp-aws/request/{requestId}:
    get:
      consumes:
      - application/json
      description: Check the status of a specific request by its ID
      parameters:
      - default: tr01
        description: Terrarium ID
        in: path
        name: trId
        required: true
        type: string
      - description: Request ID
        in: path
        name: requestId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/model.Response'
      summary: Check the status of a specific request by its ID
      tags:
      - '[VPN] GCP to AWS VPN tunnel configuration'
  /tr/{trId}/vpn/gcp-azure:
    delete:
      consumes:
      - application/json
      description: Destroy network resources that were used to configure GCP as an
        Azure VPN tunnel
      parameters:
      - default: tr01
        description: Terrarium ID
        in: path
        name: trId
        required: true
        type: string
      - description: Custom request ID
        in: header
        name: x-request-id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/model.Response'
      summary: Destroy network resources that were used to configure GCP as an Azure
        VPN tunnel
      tags:
      - '[VPN] GCP to Azure VPN tunnel configuration (under development)'
    get:
      consumes:
      - application/json
      description: Get resource info to configure GCP to Azure VPN tunnels
      parameters:
      - default: tr01
        description: Terrarium ID
        in: path
        name: trId
        required: true
        type: string
      - default: refined
        description: Resource info by detail (refined, raw)
        in: query
        name: detail
        type: string
      - description: Custom request ID
        in: header
        name: x-request-id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/model.Response'
      summary: Get resource info to configure GCP to Azure VPN tunnels
      tags:
      - '[VPN] GCP to Azure VPN tunnel configuration (under development)'
    post:
      consumes:
      - application/json
      description: Create network resources for VPN tunnel in GCP and Azure
      parameters:
      - default: tr01
        description: Terrarium ID
        in: path
        name: trId
        required: true
        type: string
      - description: Custom request ID
        in: header
        name: x-request-id
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/model.Response'
      summary: Create network resources for VPN tunnel in GCP and Azure
      tags:
      - '[VPN] GCP to Azure VPN tunnel configuration (under development)'
  /tr/{trId}/vpn/gcp-azure/env:
    delete:
      consumes:
      - application/json
      description: Clear the entire directory and configuration files
      parameters:
      - default: tr01
        description: Terrarium ID
        in: path
        name: trId
        required: true
        type: string
      - description: Custom request ID
        in: header
        name: x-request-id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/model.Response'
      summary: Clear the entire directory and configuration files
      tags:
      - '[VPN] GCP to Azure VPN tunnel configuration (under development)'
    post:
      consumes:
      - application/json
      description: Initialize a multi-cloud terrarium for GCP to Azure VPN tunnel
      parameters:
      - default: tr01
        description: Terrarium ID
        in: path
        name: trId
        required: true
        type: string
      - description: Custom request ID
        in: header
        name: x-request-id
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/model.Response'
      summary: Initialize a multi-cloud terrarium for GCP to Azure VPN tunnel
      tags:
      - '[VPN] GCP to Azure VPN tunnel configuration (under development)'
  /tr/{trId}/vpn/gcp-azure/infracode:
    post:
      consumes:
      - application/json
      description: Create the infracode to configure GCP to Azure VPN tunnels
      parameters:
      - default: tr01
        description: Terrarium ID
        in: path
        name: trId
        required: true
        type: string
      - description: Parameters requied to create the infracode to configure GCP to
          Azure VPN tunnels
        in: body
        name: ParamsForInfracode
        required: true
        schema:
          $ref: '#/definitions/model.CreateInfracodeOfGcpAzureVpnRequest'
      - description: Custom request ID
        in: header
        name: x-request-id
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/model.Response'
      summary: Create the infracode to configure GCP to Azure VPN tunnels
      tags:
      - '[VPN] GCP to Azure VPN tunnel configuration (under development)'
  /tr/{trId}/vpn/gcp-azure/plan:
    post:
      consumes:
      - application/json
      description: Check and show changes by the current infracode to configure GCP
        to Azure VPN tunnels
      parameters:
      - default: tr01
        description: Terrarium ID
        in: path
        name: trId
        required: true
        type: string
      - description: Custom request ID
        in: header
        name: x-request-id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/model.Response'
      summary: Check and show changes by the current infracode to configure GCP to
        Azure VPN tunnels
      tags:
      - '[VPN] GCP to Azure VPN tunnel configuration (under development)'
  /tr/{trId}/vpn/gcp-azure/request/{requestId}:
    get:
      consumes:
      - application/json
      description: Check the status of a specific request by its ID
      parameters:
      - default: tr01
        description: Terrarium ID
        in: path
        name: trId
        required: true
        type: string
      - description: Request ID
        in: path
        name: requestId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/model.Response'
      summary: Check the status of a specific request by its ID
      tags:
      - '[VPN] GCP to Azure VPN tunnel configuration (under development)'
  /tr/{trId}/vpn/site-to-site:
    delete:
      consumes:
      - application/json
      description: Delete Site-to-Site VPN
      parameters:
      - default: tr01
        description: Terrarium ID
        in: path
        name: trId
        required: true
        type: string
      - description: Custom request ID
        in: header
        name: x-request-id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/model.Response'
      summary: Delete Site-to-Site VPN
      tags:
      - '[Site-to-Site VPN] Resource Operations'
    get:
      consumes:
      - application/json
      description: Get Site-to-Site VPN information
      parameters:
      - default: tr01
        description: Terrarium ID
        in: path
        name: trId
        required: true
        type: string
      - default: refined
        description: Resource info by detail (refined, raw)
        enum:
        - refined
        - raw
        in: query
        name: detail
        type: string
      - description: Custom request ID
        in: header
        name: x-request-id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/model.Response'
      summary: Get Site-to-Site VPN
      tags:
      - '[Site-to-Site VPN] Resource Operations'
    post:
      consumes:
      - application/json
      description: Create Site-to-Site VPN between two cloud sites
      parameters:
      - default: tr01
        description: Terrarium ID
        in: path
        name: trId
        required: true
        type: string
      - description: Parameters required to create the Site-to-Site VPN
        in: body
        name: ReqBody
        required: true
        schema:
          $ref: '#/definitions/model.CreateSiteToSiteVpnRequest'
      - description: Custom request ID
        in: header
        name: x-request-id
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/model.Response'
      summary: Create Site-to-Site VPN
      tags:
      - '[Site-to-Site VPN] Resource Operations'
  /tr/{trId}/vpn/site-to-site/actions/apply:
    post:
      consumes:
      - application/json
      description: Apply Site-to-Site VPN
      parameters:
      - default: tr01
        description: Terrarium ID
        in: path
        name: trId
        required: true
        type: string
      - description: Custom request ID
        in: header
        name: x-request-id
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/model.Response'
      summary: Apply Site-to-Site VPN
      tags:
      - '[Site-to-Site VPN] OpenTofu Actions (for fine-grained control)'
  /tr/{trId}/vpn/site-to-site/actions/destroy:
    delete:
      consumes:
      - application/json
      description: Destroy Site-to-Site VPN
      parameters:
      - default: tr01
        description: Terrarium ID
        in: path
        name: trId
        required: true
        type: string
      - description: Custom request ID
        in: header
        name: x-request-id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/model.Response'
      summary: Destroy Site-to-Site VPN
      tags:
      - '[Site-to-Site VPN] OpenTofu Actions (for fine-grained control)'
  /tr/{trId}/vpn/site-to-site/actions/emptyout:
    delete:
      consumes:
      - application/json
      description: EmptyOut Site-to-Site VPN
      parameters:
      - default: tr01
        description: Terrarium ID
        in: path
        name: trId
        required: true
        type: string
      - description: Custom request ID
        in: header
        name: x-request-id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/model.Response'
      summary: EmptyOut Site-to-Site VPN
      tags:
      - '[Site-to-Site VPN] OpenTofu Actions (for fine-grained control)'
  /tr/{trId}/vpn/site-to-site/actions/init:
    post:
      consumes:
      - application/json
      description: Init Site-to-Site VPN
      parameters:
      - default: tr01
        description: Terrarium ID
        in: path
        name: trId
        required: true
        type: string
      - description: Parameters required to create the Site-to-Site VPN
        in: body
        name: ReqBody
        required: true
        schema:
          $ref: '#/definitions/model.CreateSiteToSiteVpnRequest'
      - description: Custom request ID
        in: header
        name: x-request-id
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/model.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/model.Response'
      summary: Init Site-to-Site VPN
      tags:
      - '[Site-to-Site VPN] OpenTofu Actions (for fine-grained control)'
  /tr/{trId}/vpn/site-to-site/actions/output:
    get:
      consumes:
      - application/json
      description: Output Site-to-Site VPN
      parameters:
      - default: tr01
        description: Terrarium ID
        in: path
        name: trId
        required: true
        type: string
      - default: refined
        description: Resource info by detail (refined, raw)
        enum:
        - refined
        - raw
        in: query
        name: detail
        type: string
      - description: Custom request ID
        in: header
        name: x-request-id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/model.Response'
      summary: Output Site-to-Site VPN
      tags:
      - '[Site-to-Site VPN] OpenTofu Actions (for fine-grained control)'
  /tr/{trId}/vpn/site-to-site/actions/plan:
    post:
      consumes:
      - application/json
      description: Plan Site-to-Site VPN
      parameters:
      - default: tr01
        description: Terrarium ID
        in: path
        name: trId
        required: true
        type: string
      - description: Custom request ID
        in: header
        name: x-request-id
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.Response'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.Response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.Response'
        "503":
          description: Service Unavailable
          schema:
            $ref: '#/definitions/model.Response'
      summary: Plan Site-to-Site VPN
      tags:
      - '[Site-to-Site VPN] OpenTofu Actions (for fine-grained control)'
securityDefinitions:
  BasicAuth:
    type: basic
swagger: "2.0"
